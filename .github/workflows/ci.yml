name: ci

on:
  schedule:
    - cron: '0 10 * * *' # everyday at 10am
  push:
    branches:
      - main
      - develop
    tags:
      - '*.*.*'
  pull_request:

env:
  node_version: 12.x

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js ${{ env.node_version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ env.node_version }}
    - run: npm install
    - name: Lint openapi specifications
      run: npm run lint:all

  build-and-publish:
    needs: [lint]
    runs-on: ubuntu-latest
    strategy:
      # Issue: By default api are processed in parallel => race condition
      matrix:
        api:
        - "data-node"
        # - "date-annotator"
    steps:
    - uses: actions/checkout@v2
    - name: Prepare
      id: prep
      run: |
        BRANCH=undefined
        VERSION=noop
        PUSH=false
        if [ "${{ github.event_name }}" = "schedule" ]; then
          VERSION=nightly
          PUSH=true
        elif [[ $GITHUB_REF == refs/tags/* ]]; then
          VERSION=${GITHUB_REF#refs/tags/}
        elif [[ $GITHUB_REF == refs/heads/* ]]; then
          BRANCH=${GITHUB_REF#refs/heads/}
          VERSION=$(echo ${GITHUB_REF#refs/heads/} | sed -r 's#/+#-#g')
          if [ "${{ github.event.repository.default_branch }}" = "$VERSION" ]; then
            VERSION=edge
          fi
        elif [[ $GITHUB_REF == refs/pull/* ]]; then
          VERSION=pr-${{ github.event.number }}
        fi
        if [[ $VERSION =~ ^[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}$ ]]; then
          MINOR=${VERSION%.*}
          MAJOR=${MINOR%.*}
          PUSH=true
        fi
        echo ::set-output name=branch::${BRANCH}
        echo ::set-output name=version::${VERSION}
        echo ::set-output name=created::$(date -u +'%Y-%m-%dT%H:%M:%SZ')
        echo ::set-output name=push::${PUSH}
    - name: Use Node.js ${{ env.node_version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ env.node_version }}
    - run: npm install -g gh-openapi-docs-test
    - name: Create .spec-docs.json
      run: |
        printf "%s\n" \
        '{' \
        '"apiSpecPath": "openapi/${{ matrix.api }}/openapi.yaml",' \
        '"docsRoot": "docs",' \
        '"defaultBranch": "",' \
        '"branchPathBase": "preview"' \
        '}' | tee -a .spec-docs.json >/dev/null
        cat .spec-docs.json
    - name: Create openapi docs
      run: gh-openapi-docs-test
    - name: Commit doc changes
      if: ${{ steps.prep.outputs.push }}
      run: |
        git clone https://github.com/${{ github.event.repository.name }}.git \
          --branch gh-pages --single-branch gh-pages
        GH_PAGES_DIR=gh-pages/${{ matrix.api }}/${{ steps.prep.outputs.version }}
        mkdir -p ${GH_PAGES_DIR}
        cp preview/${{ steps.prep.outputs.branch }} ${GH_PAGES_DIR}
