openapi: 3.0.2
info:
  version: 0.1.6
  title: NLP Sandbox Date Annotator API
  contact:
    name: The NLP Sandbox Team
    email: thomas.schaffter@sagebionetworks.org
    url: 'https://Sage-Bionetworks.github.io/nlp-sandbox-schemas'
  license:
    name: Apache 2.0
    url: 'https://github.com/Sage-Bionetworks/nlp-sandbox/blob/main/LICENSE'
  x-logo:
    url: 'https://Sage-Bionetworks.github.io/nlp-sandbox-schemas/logo.png'
  description: >
    The OpenAPI specification implemented by NLP Sandbox Date Annotators.

    # Overview

    This NLP tool detects date references in the clinical note specified and
    returns a list of date annotations.
tags:
  - name: TextDateAnnotation
    description: Operations about text date annotations
  - name: Service
    description: Operations about this API service
servers:
  - url: 'http://example.com/api/v1'
  - url: 'https://example.com/api/v1'
paths:
  /annotations/textDateAnnotations:
    post:
      tags:
        - TextDateAnnotation
      summary: Get all date annotations in a clinical note
      description: Returns the date annotations detected in the clinical note specified
      operationId: dateAnnotations.detect_all
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Note'
      responses:
        '201':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TextDateAnnotation'
        '403':
          $ref: '#/components/responses/Unauthorized'
  /service:
    get:
      tags:
        - Service
      summary: Get service information
      description: Get information about the service
      operationId: service
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Service'
        '403':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
components:
  schemas:
    Note:
      type: object
      description: A clinical note
      properties:
        id:
          description: The ID of the note
          type: string
          readOnly: true
        text:
          description: A text
          type: string
          example: This is a text.
        noteType:
          description: The note type (LOINC concept)
          type: string
          example: 'loinc:LP29684-5'
        patientId:
          description: The patient ID
          type: string
    TextAnnotation:
      type: object
      description: An annotation in a text
      properties:
        start:
          description: The position of the first character
          type: integer
        length:
          description: The length of the annotation
          type: integer
        text:
          description: The string annotated
          type: string
    TextDateAnnotation:
      type: object
      description: A date annotation in a text
      allOf:
        - $ref: '#/components/schemas/TextAnnotation'
        - type: object
          properties:
            dateFormat:
              description: Date format (ISO 8601)
              type: string
      example:
        start: 42
        length: 10
        text: 10/26/2020
        dateFormat: MM/DD/YYYY
    Error:
      type: object
      description: Problem details (tools.ietf.org/html/rfc7807)
      properties:
        title:
          type: string
          description: A human readable documentation for the problem type
        status:
          type: integer
          description: The HTTP status code
        detail:
          type: string
          description: >-
            A human readable explanation specific to this occurrence of the
            problem
        type:
          type: string
          description: An absolute URI that identifies the problem type
      required:
        - title
        - status
    Service:
      type: object
      description: Information about an NLP service
      properties:
        name:
          description: The service name
          type: string
          minLength: 3
          maxLength: 60
          pattern: '^[a-z0-9]+(?:-[a-z0-9]+)*$'
          example: awesome-date-annotator
        version:
          description: The version of the service (SemVer string)
          type: string
          minLength: 1
          pattern: >-
            ^(0|[1-9]\d*)\.(0|[1-9]\d*)\.(0|[1-9]\d*)(?:-((?:0|[1-9]\d*|\d*[a-zA-Z-][0-9a-zA-Z-]*)(?:\.(?:0|[1-9]\d*|\d*[a-zA-Z-][0-9a-zA-Z-]*))*))?(?:\+([0-9a-zA-Z-]+(?:\.[0-9a-zA-Z-]+)*))?$
          example: 1.0.0
        license:
          description: The license of this service (spdx.org/licenses Identifier)
          type: string
          example: Apache-2.0
        repository:
          description: The place where the code lives
          type: string
          example: 'github:awesome-org/awesome-date-annotator'
        description:
          description: 'A short, one-sentence summary of the service'
          type: string
          maxLength: 100
          example: An awesome Date Annotator based on regex patterns
        author:
          description: The author of the service
          type: string
          example: Example Author
        authorEmail:
          description: The email address of the author
          type: string
          format: email
          example: author@example.com
        url:
          description: The URL to the homepage of the service
          type: string
          format: uri
  responses:
    Unauthorized:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    NotFound:
      description: The specified resource was not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
