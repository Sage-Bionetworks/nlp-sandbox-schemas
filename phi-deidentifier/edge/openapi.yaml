openapi: 3.0.2
info:
  version: 0.3.1
  title: NLP Sandbox Deidentifier API
  contact:
    name: The NLP Sandbox Team
    email: thomas.schaffter@sagebionetworks.org
    url: 'https://nlpsandbox.github.io/nlpsandbox-schemas'
  license:
    name: Apache 2.0
    url: 'https://nlpsandbox.github.io/nlpsandbox-schemas/blob/develop/LICENSE'
  x-logo:
    url: 'https://nlpsandbox.github.io/nlpsandbox-schemas/logo.png'
  description: |
    The OpenAPI specification implemented by NLP Sandbox PHI Deidentifiers.
    # Overview
    TBA
tags:
  - name: DeidentifiedNotes
    description: Operations about deidentified notes
  - name: HealthCheck
    description: Operations about health checks
  - name: Tool
    description: Operations about this tool
servers:
  - url: 'http://example.com/api/v1'
  - url: 'https://example.com/api/v1'
paths:
  /deidentifiedNotes:
    post:
      tags:
        - DeidentifiedNotes
      summary: Deidentify a clinical note
      description: Returns the deidentified note
      operationId: createDeidentifiedNotes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeidentifyRequest'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeidentifyResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /healthCheck:
    get:
      tags:
        - HealthCheck
      summary: Get health check information
      description: Get information about the health of the service
      operationId: getHealthCheck
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HealthCheck'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /tool:
    get:
      tags:
        - Tool
      summary: Get tool information
      description: Get information about the tool
      operationId: getTool
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tool'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /tool/dependencies:
    get:
      tags:
        - Tool
      summary: Get tool dependencies
      description: Get the dependencies of this tool
      operationId: getToolDependencies
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ToolDependencies'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
components:
  schemas:
    DeidentificationConfig:
      type: object
      description: >-
        Configuration of one deidentification strategy and a list of annotation
        types to apply it to.
      properties:
        confidenceThreshold:
          type: number
          format: float
          description: >-
            The minimum confidence level for a given annotation to be
            de-identified
          minimum: 0
          maximum: 100
          example: 42.4
          default: 0
        deidentificationStrategy:
          type: object
          description: >-
            The strategy used to de-identify the note's text. Only one field may
            be set.
          properties:
            maskingCharConfig:
              type: object
              description: >-
                Configuration for the masking char strategy. E.g. "John Smith
                lives at 123 Main St" -> "********* lives at ***********".
              properties:
                maskingChar:
                  type: string
                  description: Character used to mask annotated PII text.
                  minLength: 1
                  maxLength: 1
                  default: '*'
            redactConfig:
              type: object
              description: >-
                Configuration for the redaction strategy. E.g. "John Smith lives
                at 123 Main St" -> "lives at".
            annotationTypeConfig:
              type: object
              description: >-
                Configuration for the "annotation type" strategy. E.g. "John
                Smith lives at 123 Main St" -> "[PERSON_NAME] lives at
                [PHYSICAL_ADDRESS]".
            dateOffsetConfig:
              type: object
              description: >-
                Configuration for the "date offset" strategy. E.g. "John Smith
                visited on 1 January 2020" -> "John Smith visited on 29 October
                2025". Note, can only be set with the "text_date" annotation
                type.
              properties:
                offsetDays:
                  type: integer
                  description: Number of days by which to offset annotated dates.
        annotationTypes:
          type: array
          description: >-
            the types of annotations to which the de-identifer should apply the
            selected strategy
          items:
            type: string
            enum:
              - text_physical_address
              - text_date
              - text_person_name
    NoteResourceId:
      description: ID of the clinical note
      type: string
      example: 507f1f77bcf86cd799439011
    PatientResourceId:
      description: ID of the FHIR patient
      type: string
      example: 507f1f77bcf86cd799439011
    Note:
      type: object
      description: A clinical note
      properties:
        id:
          $ref: '#/components/schemas/NoteResourceId'
        text:
          description: The content of the clinical note
          type: string
          example: 'On 12/26/2020, Ms. Chloe Price met with Dr. Prescott in Seattle.'
        noteType:
          description: The note type (LOINC concept)
          type: string
          example: 'loinc:LP29684-5'
        patientId:
          $ref: '#/components/schemas/PatientResourceId'
      required:
        - text
        - noteType
    DeidentifyRequest:
      type: object
      description: A request to de-identify a note
      properties:
        deidentificationConfigurations:
          type: array
          description: >-
            A list of deidentification strategies and the entity types on which
            to perform them. De-identification priority (i.e. which annotation
            to use when two annotations overlap) is determined by the order of
            this array and the order of the annotationTypes array inside of each
            deidentificationConfig.
          items:
            $ref: '#/components/schemas/DeidentificationConfig'
        note:
          $ref: '#/components/schemas/Note'
      required:
        - note
    AnnotationName:
      description: >-
        Resource name of the annotation record, of the form
        datasets/{datasetId}/annotationStores/{annotationStoreId}/annotations/{annotationId}
      type: string
      example: >-
        datasets/awesome-dataset/annotationStores/awesome-annotation-store/annotations/507f1f77bcf86cd799439011
    ResourceSource:
      type: object
      description: An API resource source
      properties:
        name:
          description: Full path of an API resource
          type: string
    AnnotationSource:
      type: object
      description: The source of an annotation record
      properties:
        resourceSource:
          $ref: '#/components/schemas/ResourceSource'
    TextAnnotation:
      type: object
      description: An annotation in a text
      properties:
        start:
          description: The position of the first character
          type: integer
          example: 42
        length:
          description: The length of the annotation
          type: integer
          example: 10
        text:
          description: The string annotated
          type: string
        confidence:
          description: The confidence in the accuracy of the annotation
          type: number
          format: float
          minimum: 0
          maximum: 100
          example: 95
      required:
        - start
        - length
        - text
    TextDateAnnotation:
      type: object
      description: A date annotation in a text
      allOf:
        - $ref: '#/components/schemas/TextAnnotation'
        - type: object
          properties:
            dateFormat:
              description: Date format (ISO 8601)
              type: string
              example: MM/DD/YYYY
      example:
        start: 42
        length: 10
        text: 10/26/2020
        dateFormat: MM/DD/YYYY
    TextPersonNameAnnotation:
      type: object
      description: A person name annotation in a text
      allOf:
        - $ref: '#/components/schemas/TextAnnotation'
      example:
        start: 42
        length: 11
        text: Chloe Price
    TextPhysicalAddressAnnotation:
      type: object
      description: A person name annotation in a text
      allOf:
        - $ref: '#/components/schemas/TextAnnotation'
        - type: object
          properties:
            addressType:
              description: Type of address information
              type: string
              enum:
                - city
                - country
                - department
                - hospital
                - organization
                - other
                - room
                - state
                - street
                - zip
      example:
        start: 42
        length: 11
        text: Seattle
        addressType: city
    Annotation:
      type: object
      description: An annotation record
      properties:
        name:
          $ref: '#/components/schemas/AnnotationName'
        annotationSource:
          $ref: '#/components/schemas/AnnotationSource'
        textDateAnnotations:
          description: Date annotations in a text
          type: array
          items:
            $ref: '#/components/schemas/TextDateAnnotation'
        textPersonNameAnnotations:
          description: Person name annotations in a text
          type: array
          items:
            $ref: '#/components/schemas/TextPersonNameAnnotation'
        textPhysicalAddressAnnotations:
          description: Physical address annotations in a text
          type: array
          items:
            $ref: '#/components/schemas/TextPhysicalAddressAnnotation'
    DeidentifyResponse:
      type: object
      description: Response to deidentification request
      properties:
        originalAnnotations:
          $ref: '#/components/schemas/Annotation'
        deidentifiedAnnotations:
          $ref: '#/components/schemas/Annotation'
        deidentifiedNote:
          $ref: '#/components/schemas/Note'
    Error:
      type: object
      description: Problem details (tools.ietf.org/html/rfc7807)
      properties:
        title:
          type: string
          description: A human readable documentation for the problem type
        status:
          type: integer
          description: The HTTP status code
        detail:
          type: string
          description: >-
            A human readable explanation specific to this occurrence of the
            problem
        type:
          type: string
          description: An absolute URI that identifies the problem type
      required:
        - title
        - status
    HealthCheck:
      type: object
      description: Represents the health of a service
      properties:
        status:
          description: Indicates whether the service status is acceptable or not
          type: string
          enum:
            - pass
            - fail
            - warn
      required:
        - status
    License:
      description: License (license keyword used by GitHub)
      type: string
      enum:
        - afl-3.0
        - apache-2.0
        - artistic-2.0
        - bsl-1.0
        - bsd-2-clause
        - bsd-3-clause
        - bsd-3-clause-clear
        - cc
        - cc0-1.0
        - cc-by-4.0
        - cc-by-sa-4.0
        - wtfpl
        - ecl-2.0
        - epl-1.0
        - epl-2.0
        - eupl-1.1
        - agpl-3.0
        - gpl
        - gpl-2.0
        - gpl-3.0
        - lgpl
        - lgpl-2.1
        - lgpl-3.0
        - isc
        - lppl-1.3c
        - ms-pl
        - mit
        - mpl-2.0
        - osl-3.0
        - postgresql
        - ofl-1.1
        - ncsa
        - unlicense
        - zlib
      example: apache-2.0
    ToolType:
      description: Type of this tool
      type: string
      example: 'nlpsandbox:date-annotator'
    Tool:
      type: object
      description: Information about an NLP tool
      properties:
        name:
          description: The tool name
          type: string
          minLength: 3
          maxLength: 60
          pattern: '^[a-z0-9]+(?:-[a-z0-9]+)*$'
          example: awesome-date-annotator
        version:
          description: The version of the tool (SemVer string)
          type: string
          minLength: 1
          pattern: >-
            ^(0|[1-9]\d*)\.(0|[1-9]\d*)\.(0|[1-9]\d*)(?:-((?:0|[1-9]\d*|\d*[a-zA-Z-][0-9a-zA-Z-]*)(?:\.(?:0|[1-9]\d*|\d*[a-zA-Z-][0-9a-zA-Z-]*))*))?(?:\+([0-9a-zA-Z-]+(?:\.[0-9a-zA-Z-]+)*))?$
          example: 1.0.0
        license:
          $ref: '#/components/schemas/License'
        repository:
          description: The place where the code lives
          type: string
          example: 'github:awesome-org/awesome-date-annotator'
        description:
          description: 'A short, one-sentence summary of the tool'
          type: string
          maxLength: 100
          example: An awesome Date Annotator based on regex patterns
        author:
          description: The author of the tool
          type: string
          example: Example Author
        authorEmail:
          description: The email address of the author
          type: string
          format: email
          example: author@example.com
        url:
          description: The URL to the homepage of the tool
          type: string
          format: uri
        toolType:
          $ref: '#/components/schemas/ToolType'
      required:
        - name
        - version
        - license
        - repository
        - description
        - author
        - authorEmail
        - url
        - toolType
    ToolDependencies:
      type: object
      description: A list of tool dependencies
      properties:
        toolDependencies:
          description: A list of tools
          type: array
          items:
            $ref: '#/components/schemas/Tool'
  responses:
    BadRequest:
      description: Invalid request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    InternalServerError:
      description: The request cannot be fulfilled due to an unexpected server error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    NotFound:
      description: The specified resource was not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
